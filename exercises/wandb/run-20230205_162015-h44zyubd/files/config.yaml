wandb_version: 1

_wandb:
  desc: null
  value:
    cli_version: 0.13.9
    framework: torch
    is_jupyter_run: true
    is_kaggle_kernel: false
    python_version: 3.10.9
    start_time: 1675632022.809619
    t:
      1:
      - 1
      - 5
      - 41
      - 53
      - 55
      2:
      - 1
      - 5
      - 41
      - 53
      - 55
      3:
      - 1
      - 2
      - 16
      - 23
      4: 3.10.9
      5: 0.13.9
      8:
      - 1
      - 3
      - 5
batch_size:
  desc: null
  value: 512
device:
  desc: null
  value: cuda
epochs:
  desc: null
  value: "ResNetTrainingArgs(trainset=Dataset CIFAR10\n    Number of datapoints: 50000\n\
    \    Root location: ./data\n    Split: Train\n    StandardTransform\nTransform:\
    \ Compose(\n               ToTensor()\n               Normalize(mean=[0.485, 0.456,\
    \ 0.406], std=[0.229, 0.224, 0.225])\n           ), testset=Dataset CIFAR10\n\
    \    Number of datapoints: 10000\n    Root location: ./data\n    Split: Test\n\
    \    StandardTransform\nTransform: Compose(\n               ToTensor()\n     \
    \          Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])\n\
    \           ), epochs=3, batch_size=512, loss_fn=CrossEntropyLoss(), optimizer=<class\
    \ 'torch.optim.adam.Adam'>, optimizer_args=(), device='cuda', filename_save_model='models/part4_resnet.pt',\
    \ subset=5)"
filename_save_model:
  desc: null
  value: models/part4_resnet.pt
loss_fn:
  desc: null
  value: CrossEntropyLoss()
optimizer:
  desc: null
  value: torch.optim.adam.Adam
optimizer_args:
  desc: null
  value: []
subset:
  desc: null
  value: 1
testset:
  desc: null
  value: "Dataset CIFAR10\n    Number of datapoints: 10000\n    Root location: ./data\n\
    \    Split: Test\n    StandardTransform\nTransform: Compose(\n               ToTensor()\n\
    \               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])\n\
    \           )"
trainset:
  desc: null
  value: "Dataset CIFAR10\n    Number of datapoints: 50000\n    Root location: ./data\n\
    \    Split: Train\n    StandardTransform\nTransform: Compose(\n              \
    \ ToTensor()\n               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229,\
    \ 0.224, 0.225])\n           )"
